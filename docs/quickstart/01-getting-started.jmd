{% extends "_templates/base.html" %}
{% set page_title = "Getting Started" %}
{% block content %}
{% markdown %}
# Getting Started with Fine Uploader {: .page-header }

This tutorial will serve as a step-by-step guide that you can follow to get Fine Uploader up and running in your project.

The tutorial is not comprehensive or meant to cover all aspects of Fine Uploader.
For more information, make sure to read through the list of features as well
as the API documentation. Both of these items (and more) are available in the top nav menu anywhere on this site.

### 1. Download (or build)

First, you will need to download or build Fine Uploader's JS, CSS, image, and template files. You have exactly three different supported options to achieve this. **Choose _one_ of the following options:**

#### Download [Fine Uploader from npm](https://www.npmjs.com/package/fine-uploader)

The simplest option is to run `npm install fine-uploader` in your project directory. But this may not be appropriate for all situations.

If your project has a package.json file, you should do this instead:

1. Add a "fine-uploader" entry to the "dependencies" section of your project's package.json file. The safest option is to explicitly specify the version number you need. For example, as of 16 August 2016, your entry would be `"fine-uploader": "5.11.5"`. For more information about package.json files, read [the official npm documentation on the subject](https://docs.npmjs.com/files/package.json).
2. Run `npm install` in the same directory as your project's package.json file.

In either case, fine-uploader will be installed in a directory of the same name under the node_modules directory.

#### Download Fine Uploader from FineUploader.com

Navigate to [http://fineuploader.com/customize](http://fineuploader.com/customize) and select the desired build type. See "step 2" below for a detailed explanation of the different Fine Uploader build types. For any version since (and including) 5.11.0, you can download the individual builds at [https://github.com/FineUploader/fine-uploader/releases](https://github.com/FineUploader/fine-uploader/releases).


#### Build Fine Uploader yourself from the GitHub repo

1. `git clone https://github.com/FineUploader/fine-uploader.git`
2. `cd fine-uploader`
3. `npm install`
4. `make build`

This will result in a "_build" directory with CSS, JS, image, and template files for all possible builds of Fine Uploader. For information on how to further process these build files, if needed, read the ["Generating build artifacts" section the project's README.md file](https://github.com/FineUploader/fine-uploader#generating-build-artifacts).

### 2. Decide which build of Fine Uploader to use

Fine Uploader builds are categorized by "endpoint type" _and_ by feature set. Each of the four endpoint type builds are available with each of the two supported feature sets.

#### Endpoint types

A Fine Uploader build that is tied to a specific "endpoint type" is designed to send requests to match a specific type of server. There are three endpoint types supported:

##### Traditional endpoints

Traditional endpoints reside on a server or servers that you control. Fine Uploader "Traditional" will send all HTTP requests (such as "upload" and "delete file", to name a couple) to _your_ server. It is expected that you maintain and control the server that handles these requests. The [traditional server endpoints documentation page](../endpoint_handlers/traditional.html) describes how Fine Uploader "Traditional" will send requests to your server, and how your server must respond to these requests.

##### S3 endpoints

Fine Uploader S3 sends all requests (with the exception of the delete file request) directly to one or more S3 buckets. You may [utilize a server you control to sign these requests](../endpoint_handlers/amazon-s3.html) (the safest option), or you may elect to [omit a server entirely and sign the requests client side](../features/no-server-uploads.html) using Amazon's Web Identity Federation.

##### Microsoft Azure endpoints

Fine Uploader Azure sends _all_ requests directly to one or more Azure Blob Storage containers. You must utilize [a server you control to sign each request](../endpoint_handlers/azure.html).

{{ alert("Fine Uploader Azure does not support IE9 and older.  This is due to the fact that Azure's API does not allow files to be uploaded via multipart encoded POST requests, which is critical for IE9 and older support. If you need to support IE9 and older, you will need to load/use Fine Uploader with its traditional endpoint handler if the value of `qq.supportedFeatures.ajaxUploading` is `false`.") }}

##### "All" endpoints

If you would like to be able to send files to various endpoint types from a single running instance of Fine Uploader, a build of the library exists that includes support for traditional endpoint, S3 endpoints, _and_ Azure endpoints.

#### Feature sets

In addition to endpoint types Fine Uploader builds are classified according to what we call "feature sets". The two feature sets with associated builds are "UI" and "core".

##### [Core feature set](../modes/core.html)

The most basic Fine Uploader mode.  Core mode assumes that you will design and code your own UI but still make use of Fine Uploader's API. Core mode is suggested for advanced developers who wish to heavily customize the uploader's user interface.


##### [UI feature set](../modes/ui.html)

Inherits everything from Core mode. UI mode also comes with a fully functional user interface which includes, but is not limited to: a default upload button, progress bars, retry/cancel/delete buttons, proper display of error messages, and more. UI mode is recommended for those who are pleased with the default Fine Uploader interface or can sufficiently customize the default Fine Uploader UI using CSS overrides. **In most cases, the UI feature set will be the most appropriate choice.**

### 3. Determine how you would like to import Fine Uploader

You have the following options available to pull Fine Uploader into your project:

1. CommonJS (`require`).
2. ES6 Modules (`import`).
3. Globally scoped (`<script src="...">`)

For more information on how you can load Fine Uploader into your project, please see the
[modules feature page](../features/modules.html).


### 4. Next, let's check out some of Fine Uploader's options.

Proceed by selecting either:

* [Traditional endpoint](02-setting_options.html)
* [Amazon S3 endpoint](02-setting_options-s3.html)
* [Azure Blob Storage endpoint](02-setting_options-azure.html)

{% endmarkdown %}
{% endblock %}
